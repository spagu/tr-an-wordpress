- name: Create webroot
  file:
    state: directory
    path: /srv/www/
    owner: root
    group: root
    mode: 0755
  become: yes

- name: Check if WordPress directory exists in /srv/www
  stat: path=/srv/www/{{server_hostname}}
  register: check_path

- name: Download WordPress
  get_url:
    url: https://wordpress.org/wordpress-{{ wp_version }}.tar.gz
    dest: /tmp/wordpress-{{ wp_version }}.tar.gz
    checksum: "sha1:{{ wp_sha1sum }}"
  become: yes
  when: not check_path.stat.exists

- name: Extract WordPress
  unarchive:
    src: /tmp/wordpress-{{ wp_version }}.tar.gz
    dest: /tmp
    owner: www-data
    group: www-data
    copy: no
  become: yes
  when: not check_path.stat.exists

- name: Move WordPress install files
  command: mv /tmp/wordpress /srv/www/{{server_hostname}}
  become: yes
  when: not check_path.stat.exists

- name: Fetch random salts for WordPress config
  local_action: command curl https://api.wordpress.org/secret-key/1.1/salt/
  register: "wp_salt"
  become: no

- name: Add wp-config
  template: "src=wp-config.php dest=/srv/www/{{server_hostname}}/wp-config.php"
  become: yes

- name: Update WordPress config file
  lineinfile:
    dest: "/srv/www/{{server_hostname}}/wp-config.php"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - {
        "regexp": "define\\('DB_NAME', '(.)+'\\);",
        "line": "define('DB_NAME', '{{wp_db_name}}');",
      }
    - {
        "regexp": "define\\('DB_USER', '(.)+'\\);",
        "line": "define('DB_USER', '{{wp_db_user}}');",
      }
    - {
        "regexp": "define\\('DB_PASSWORD', '(.)+'\\);",
        "line": "define('DB_PASSWORD', '{{wp_db_password}}');",
      }
  become: yes

- name: Setup wp cli tool
  get_url:
    url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    dest: /usr/local/bin/wp
    mode: 0755
- name: Template backup
  template:
    src: templates/backup.sh.j2
    dest: /usr/local/bin/backup.sh
    mode: 0755
  become: yes
- name: Setup cron backup
  cron:
    name: "Backup sql db"
    minute: "0"
    hour: "1"
    job: "/usr/local/bin/backup.sh 2>&1 | sudo tee -a /var/log/syslogs"
  become: yes
